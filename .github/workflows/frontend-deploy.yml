name: Frontend Build and Deploy

on:
  push:
    branches: [ main, master ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'frontend/**'
  workflow_dispatch:
    # Allow manual triggering

# Note: The frontend will be accessible on port 8001 after deployment
jobs:
  build:
    name: Build and Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Run tests
        working-directory: ./frontend
        run: npm test -- --passWithNoTests
      
      - name: Build
        working-directory: ./frontend
        run: npm run build
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: frontend/build/
          retention-days: 1
  
  deploy:
    name: Deploy Frontend
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Check deployment prerequisites
        id: check_deployment
        run: |
          missing=()
          [[ -z "${{ secrets.DOCKER_HUB_USERNAME }}" ]] && missing+=("DOCKER_HUB_USERNAME")
          [[ -z "${{ secrets.DOCKER_HUB_TOKEN }}" ]] && missing+=("DOCKER_HUB_TOKEN")
          
          if [[ ${#missing[@]} -gt 0 ]]; then
            echo "::warning::Missing secrets: ${missing[*]}"
            echo "can_deploy=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "can_deploy=true" >> $GITHUB_OUTPUT
      
      - name: Login to Docker Hub
        if: steps.check_deployment.outputs.can_deploy == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Set up Docker Buildx
        if: steps.check_deployment.outputs.can_deploy == 'true'
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        if: steps.check_deployment.outputs.can_deploy == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/prompt-manager-frontend:latest
          build-args: |
            REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL || 'https://prompt-back.aminseifi.com/api' }}
            REACT_APP_ENVIRONMENT=${{ secrets.REACT_APP_ENVIRONMENT || 'production' }}
      
      - name: Notify backend workflow
        if: steps.check_deployment.outputs.can_deploy == 'true'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN || github.token }}
          event-type: frontend-deployed
          client-payload: '{"image": "${{ secrets.DOCKER_HUB_USERNAME }}/prompt-manager-frontend:latest"}' 